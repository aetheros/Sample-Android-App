/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

// jar {
    // manifest {
    //     attributes (
    //         'Main-Class': 'com.aetheros.aos.onem2m.server.Main'
    //     )
    // }

    // archiveClassifier = "all"

    // from {
    //     configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    // }
// }

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    // Need for californium CoAP lib.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // https://mvnrepository.com/artifact/org.eclipse.californium/californium-core
    // CoAP lib
    compile group: 'org.eclipse.californium', name: 'californium-core', version: '2.2.2'
    compile group: 'org.eclipse.californium', name: 'element-connector-tcp-netty', version: '2.2.2'

    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    // compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    
    // https://mvnrepository.com/artifact/org.json/json
    compile group: 'org.json', name: 'json', version: '20200518'


    compile "org.slf4j:slf4j-simple:1.7.9" 
}

test {
    testLogging {
        showStandardStreams = true
    }
}

apply plugin: 'java'
sourceCompatibility = 1.8
targetCompatibility = 1.8

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

/*
 * Start the test server.
 */
task startServer(type:JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.aetheros.aos.onem2m.server.OneM2MServer'
}